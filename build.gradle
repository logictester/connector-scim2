plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'com.google.cloud.artifactregistry.gradle-plugin' version '2.2.0'
    id 'idea'
}

buildscript {
    ext {}
    dependencies {
        classpath(group: 'com.exclamationlabs.connid', name: 'connector-base-config-plugin', version: "${config_plugin_version}-+")
    }
    repositories {
        maven {
            url "https://us-east1-maven.pkg.dev/provision-general-operations/provision-public"
        }
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://nexus.evolveum.com/nexus/content/repositories/releases/"
    }
    maven {
        url "https://us-east1-maven.pkg.dev/provision-general-operations/provision-public"
    }
}

apply plugin: 'com.exclamationlabs.connid.base.config.plugin'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def build_version = System.getenv('BUILD_NUMBER') == null ? System.currentTimeMillis() : System.getenv('BUILD_NUMBER')
project.version = "${project_version}-${build_version}"
group = 'com.exclamationlabs.connid'
def versionNumber = "${project_version}"

dependencies {
    runtimeOnly 'org.codehaus.groovy:groovy:2.5.21'
    runtimeOnly 'com.evolveum.polygon:connector-common:1.5.1.3'

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'net.tirasa.connid:connector-framework-internal:1.5.1.10'
    implementation 'commons-codec:commons-codec:1.15'
    implementation "com.exclamationlabs.connid:connector-base:${base_connector_version}-+"
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.2.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'

    testImplementation "com.exclamationlabs.connid:connector-base-test-support:${test_connector_version}-+"
    testImplementation 'net.tirasa.connid:connector-framework-internal:1.5.1.10'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'generatedConfig']
        }
    }
}

task copyDependencyJars(type: Copy) {
    from configurations.runtimeClasspath.collect {
        if (it.isFile() && it.name.endsWith('.jar') && !it.name.contains("connector-framework")) {
            it
        }
    }
    into file("custom/lib")
}

task baseClean(type: Delete) {
    delete 'custom', 'generatedConfig'
}

def fatClassifierName = 'fat'
def thinClassifierName = 'thin'

task fatJar(type: Jar) {
    archiveClassifier.set(fatClassifierName)
    archiveFileName.set("connector-scim2-main-1.2.8-${System.currentTimeMillis()}-fat.jar")
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'com.your.main.ClassName'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

task thinJar(type: Jar) {
    archiveClassifier.set(thinClassifierName)
    archiveFileName.set("${project.name}-${project.version}-${thinClassifierName}.jar")
    from 'build/classes/java/main'
}

fatJar.dependsOn('compileJava', 'copyDependencyJars')
thinJar.dependsOn('compileJava')
compileJava.dependsOn('generateConfiguration')
clean.dependsOn('baseClean')

publishing {
    publications {
        connector_impl(MavenPublication) {
            artifact fatJar
            artifact thinJar
        }
    }
    repositories {
        maven {
            url "artifactregistry://us-east1-maven.pkg.dev/provision-general-operations/provision-public/"
        }
    }
}

test {
    useJUnitPlatform()
}